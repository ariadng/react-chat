/* Styles scoped with rc- prefix to avoid leaking */

.rc-chat-input-form {
  display: flex;
  align-items: center; // Align items vertically for loading indicator
  padding: 0.5rem;
  border-top: 1px solid var(--rc-input-form-border-color, #e5e7eb);
  background-color: var(--rc-input-form-bg-color, #ffffff);
}

.rc-chat-input {
  flex-grow: 1;
  height: var(--rc-input-height, 3rem);
  padding: var(--rc-input-padding, 0.5rem 1rem);
  border: 1px solid var(--rc-input-border-color, #d1d5db);
  border-radius: var(--rc-input-border-radius, 1.5rem);
  margin-right: var(--rc-input-margin-right, 0.5rem);
  font-size: var(--rc-input-font-size, 1rem);
  color: var(--rc-input-text-color, #1f2937);
  background-color: var(--rc-input-bg-color, #ffffff);
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

.rc-chat-input::placeholder {
  color: var(--rc-input-placeholder-color, #9ca3af);
}

.rc-chat-input:focus {
  outline: none;
  border-color: var(--rc-input-focus-border-color, #2563eb);
  box-shadow: 0 0 0 0.2rem var(--rc-input-focus-shadow-color, rgba(59, 130, 246, 0.25));
}

.rc-chat-send-button {
  height: var(--rc-send-button-height, 3rem);
  padding: var(--rc-send-button-padding, 0.5rem 1.5rem);
  background-color: var(--rc-send-button-bg-color, #0078FF);
  color: var(--rc-send-button-text-color, white);
  border: none;
  border-radius: var(--rc-send-button-border-radius, 1.5rem);
  cursor: pointer;
  font-weight: 500;
  transition: background-color 0.15s ease-in-out;
}

.rc-chat-send-button:hover {
  background-color: var(--rc-send-button-hover-bg-color, #006de8);
}

.rc-chat-send-button:active {
  opacity: 0.9;
  transition-duration: 0s;
}

@keyframes rc-spinner-spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.rc-spinner {
  display: inline-block;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: var(--rc-send-button-text-color, white);
  width: 1em;
  height: 1em;
  animation: rc-spinner-spin 0.8s linear infinite;
  vertical-align: middle;
}

.rc-chat-send-button.rc-loading {
  background-color: var(--rc-send-button-loading-bg-color, var(--rc-send-button-hover-bg-color, #006de8)); // Use hover or a specific loading color
  cursor: wait;

  .rc-spinner {
    position: relative;
    top: -2px;
  }
}

.rc-chat-send-button:disabled:not(.rc-loading) { // Styles for when truly disabled, not just loading
  background-color: var(--rc-send-button-disabled-bg-color, #cccccc);
  cursor: not-allowed;
  .rc-spinner {
    border-top-color: var(--rc-send-button-text-color, #666666); // Darker spinner on disabled bg
  }
}

.rc-chat-input:disabled {
  background-color: var(--rc-input-disabled-bg-color, #f0f0f0);
  cursor: not-allowed;
}

.rc-chat-input:disabled {
  background-color: var(--rc-input-disabled-bg-color, #f0f0f0);
  cursor: not-allowed;
}


.rc-chat-window-container {
  display: flex;
  flex-direction: column;
  height: 100%; /* Or a specific height, e.g., 400px */
  overflow: hidden; /* Prevents content from spilling out */
}

.rc-chat-messages-area {
  flex-grow: 1;
  overflow-y: auto; /* Allows scrolling for messages */
  padding: 1rem;
  background-color: var(--rc-messages-area-bg-color, #f7f7f7);
  display: flex;
  flex-direction: column;
  gap: var(--rc-messages-gap, 1rem);
}

.rc-chat-message {
  display: flex;
  flex-direction: column;
  max-width: 80%; /* Prevent messages from taking full width, applies to the group */
  gap: 0.25rem; /* Gap between bubbles and timestamp if multiple */
  // align-self is handled by role-specific classes below
}

.rc-message-bubble {
  padding: 0.75rem 1rem;
  border-radius: 0.75rem;
  word-wrap: break-word;
  // max-width: 100%; /* Bubbles can take full width of parent .rc-chat-message */
  // No align-self here, parent .rc-chat-message (role-specific) handles alignment of children
}

.rc-chat-message.rc-role-user {
  align-self: flex-end;
  margin-left: auto;
  align-items: flex-end; /* Aligns bubbles and timestamp to the right within the column */
  .rc-message-bubble {
    background-color: var(--rc-user-message-bg-color, #0078FF);
    color: var(--rc-user-message-text-color, #ffffff);
  }
}

.rc-chat-message.rc-role-assistant {
  align-self: flex-start;
  margin-right: auto;
  align-items: flex-start; /* Aligns bubbles and timestamp to the left within the column */
  .rc-message-bubble {
    background-color: var(--rc-assistant-message-bg-color, #E9E9EB);
    color: var(--rc-assistant-message-text-color, #272727);
  }
}

.rc-thinking-indicator { // This is a direct child of messages-area, but styled like a message item
  // It's already a .rc-chat-message.rc-role-assistant, so it gets display:flex, flex-direction:column, align-items:flex-start
  // We need to override bubble-like properties it might inherit if we put them on .rc-chat-message directly
  // The current structure where .rc-thinking-indicator is a .rc-chat-message is fine.
  // We just ensure its *content* (the text and spinner) doesn't look like a bubble.
  
  // Remove bubble look from the .rc-thinking-indicator itself if it were to get bubble styles from .rc-chat-message
  &.rc-chat-message { // More specific to override general .rc-chat-message bubble styles if they were there
    background-color: transparent !important;
    padding: 0.75rem 0 !important; // Keep its specific padding
    box-shadow: none !important;
    border: none !important;
  }

  // Inner content styling for thinking text and spinner
  font-weight: 500;
  opacity: 0.6;
  // display: flex; // Already on .rc-chat-message
  // align-items: center; // Already on .rc-chat-message
  // The text and spinner are now direct children of .rc-thinking-indicator which is a flex column.
  // We need to make the spinner and text sit on one line again.
  // Let's wrap them in a div to make them a single flex item for the column, or adjust display.
  // For simplicity, let's assume the current JSX for thinking indicator is <div class="rc-thinking-indicator"><span class="spinner"></span> Thinking...</div>
  // The parent .rc-chat-message.rc-thinking-indicator is display:flex, flex-direction:column. This is not ideal for spinner + text on one line.
  // Let's adjust .rc-thinking-indicator to be display: flex, flex-direction: row for its *own* content (spinner + text)
  flex-direction: row !important; // Override the column from .rc-chat-message
  align-items: center !important; // Override from .rc-chat-message

  .rc-spinner {
    border-top-color: var(--rc-assistant-message-text-color, #272727);
    border-left-color: var(--rc-assistant-message-text-color, #272727);
    border-bottom-color: var(--rc-assistant-message-text-color, #272727);
    border-right-color: transparent;
    width: 0.9em;
    height: 0.9em;
    margin-right: 0.5em;
  }
}

.rc-message-timestamp {
  padding: 0 0.5rem;
  font-size: var(--rc-timestamp-font-size, 0.75em);
  color: var(--rc-timestamp-text-color, #6c757d);
  // margin-top is handled by gap in .rc-chat-message or can be added if specific spacing is needed
  // text-align is not needed here as align-items on parent .rc-chat-message handles it.
  // If specific text alignment within the timestamp div is needed (e.g. if it spans width), it can be added.
  // For now, it will align with the bubbles due to parent's align-items.
}

